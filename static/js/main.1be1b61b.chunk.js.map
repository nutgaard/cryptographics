{"version":3,"sources":["components/react-aux.js","background.js","components/box.js","components/chart.js","application.js","registerServiceWorker.js","index.js"],"names":["Aux","_ref","children","propTypes","PT","node","isRequired","Background","react_default","a","createElement","className","Box","title","_ref$className","join","myTheme","VictoryTheme","material","bar","style","data","fill","axis","axisLabel","tickLabels","grid","stroke","Chart","state","currency","laster","type","d","Object","entries","grouped","map","_ref2","_ref3","slicedToArray","time","values","parseInt","concat","total","half","Math","round","length","tickValues","dv","tickFormat","includes","dV","Date","toLocaleTimeString","toLocaleDateString","react_aux","victory_chart","theme","victory_axis","dependentAxis","x","victory_bar","y","window","LZString","urls","2H","1D","1W","1M","1Y","coins","BTC","LTC","ETH","holdings","price","datapoint","key","value","toFixed","getTime","toLocaleString","storageVersion","lagreTilLocalstorage","stateJSON","compress","JSON","stringify","content","version","localStorage","setItem","Application","parse","getItem","decompress","lastFraLocalstorage","hentData","_len","arguments","promises","Array","_key","Promise","all","promise","then","resp","result","apply","toConsumableArray","keys","fetch","ok","error","Error","json","Response","fetchData","_this","rejected","filter","fulfilled","Data","reduce","acc","close","objectSpread","defineProperty","timedGroup","coinacc","ff","forEach","group","c","parseFloat","endsWith","b","setState","setType","event","target","this","_this2","times","sort","latestdatapoint","secondtoLastdatapoint","firstdatapoint","boxes","components_box","chart","startPrice","endPrice","firstPrice","isRising","diff","isRisingFromStart","diffFromStart","display","justifyContent","name","id","checked","onChange","htmlFor","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","clear","ReactDOM","render","src_background","src_application","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1be1b61b.chunk.js","sourcesContent":["import PT from 'prop-types';\n\nfunction Aux({ children }){\n    return children;\n}\n\nAux.propTypes = {\n    children: PT.node.isRequired\n};\n\nexport default Aux;","import React from 'react';\nimport './background.css';\n\nfunction Background() {\n    return <div className=\"background\" />\n}\n\nexport default Background;","import React from 'react';\nimport './box.css';\n\nfunction Box({ title, children, className = '' }){\n    return (\n        <div className={['box', className].join(' ')}>\n            <h2 className=\"box__title\">{title}</h2>\n            <div className=\"box__content\">\n                {children}\n            </div>\n        </div>\n    );\n}\n\nBox.propTypes = {};\n\nexport default Box;\n","import React from 'react';\nimport Aux from './react-aux';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\n\nconst myTheme = VictoryTheme.material;\nmyTheme.bar.style.data.fill = '#e6e6e6';\nmyTheme.axis.style.axisLabel.fill = '#e6e6e6';\nmyTheme.axis.style.tickLabels.fill = '#e6e6e6';\nmyTheme.axis.style.grid.stroke = 'none';\n\n\nfunction Chart({ state, currency }){\n    const { laster, data, type } = state;\n    if (laster) {\n        return <h1>Laster</h1>;\n    }\n\n    const d = Object.entries(data.grouped)\n        .map(([time, values]) => ({ time: parseInt(`${time}000`, 10), total: values[currency] }));\n\n    const half = Math.round(d.length / 2);\n    const tickValues = [d[0], d[half], d[d.length - 1]].map((dv) => dv.time);\n    const tickFormat = ['2H', '1D'].includes(type) ? tickValues.map((dV) => new Date(dV).toLocaleTimeString('nb')) : tickValues.map((dV) => new Date(dV).toLocaleDateString('nb'));\n\n    return (\n        <Aux>\n            <VictoryChart theme={myTheme}>\n                <VictoryAxis\n                    tickValues={tickValues}\n                    tickFormat={tickFormat}\n                />\n                <VictoryAxis\n                    dependentAxis\n                    tickFormat={(x) => x >= 1000 ? (`$${x / 1000}k`) : `$${x}`}\n                />\n                <VictoryBar\n                    data={d}\n                    x=\"time\"\n                    y=\"total\"\n                />\n            </VictoryChart>\n            <div className=\"touchoverlay\" />\n        </Aux>\n    );\n}\n\nChart.propTypes = {};\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport LZString from 'lz-string';\nimport Box from './components/box';\nimport Chart from './components/chart';\nimport './application.css';\n\nwindow.LZString = LZString;\n\nconst urls = {\n    '2H': (currency) => `https://min-api.cryptocompare.com/data/histominute?fsym=${currency}&tsym=USD&limit=120`,\n    '1D': (currency) => `https://min-api.cryptocompare.com/data/histominute?fsym=${currency}&tsym=USD&limit=120&aggregate=12`,\n    '1W': (currency) => `https://min-api.cryptocompare.com/data/histohour?fsym=${currency}&tsym=USD&limit=168`,\n    '1M': (currency) => `https://min-api.cryptocompare.com/data/histohour?fsym=${currency}&tsym=USD&limit=120&aggregate=6`,\n    '1Y': (currency) => `https://min-api.cryptocompare.com/data/histoday?fsym=${currency}&tsym=USD&limit=120&aggregate=3`\n};\n\nfunction fetchData(currency, type) {\n    return fetch(urls[type](currency))\n        .then((resp) => {\n            if (resp.ok) {\n                return resp;\n            }\n            const error = new Error(resp);\n            error.currency = currency;\n            throw error;\n        }, (resp) => {\n            const error = new Error(resp);\n            error.currency = currency;\n            throw error;\n        })\n        .then((resp) => resp.json())\n        .then((json) => {\n            if (json.Response === 'Error') {\n                const error = new Error(json);\n                error.currency = currency;\n                throw error;\n            } else {\n                json.currency = currency;\n                return json;\n            }\n        })\n}\nfunction settled(...promises) {\n    return Promise.all(promises.map((promise) => promise.then(\n        (resp) => ({ state: 'fulfilled', result: resp, currency: resp.currency }),\n        (resp) => ({ state: 'rejected', result: resp, currency: resp.currency })\n    )));\n}\n\nconst coins = {\n    BTC: 'Bitcoin',\n    LTC: 'Litecoin',\n    //XRP: 'Ripple',\n    //XRB: 'RaiBlocks',\n    //DASH: 'Dash',\n    //XMR: 'Monero',\n    //MIOTA: \"IOTA\",\n    ETH: 'Ethereum',\n    //LSK: 'Lisk',\n    //REQ: 'Request Network',\n    //DOGE: 'Dogecoin'\n};\nconst holdings = {\n    BTC: 0.0974,        // Coinbase\n    LTC: 7.3567,        // Coinbase\n    //XRP: 0, //605.18423,     // Cryptonator\n    //XRB: 0, //16.3365441,    // Kucoin\n    //DASH: 0, //0.5,          // Cryptonator\n    //XMR: 0, //1,             // Cryptonator\n    //MIOTA: 0, //108.891,       // Binance\n    ETH: 0.3675,        // Coinbase\n    //LSK: 0, //5.65434000,    // Binance\n    //REQ: 0, //19.98,         // Binance\n    //DOGE: 0 // 800           // Cryptonator\n};\n\nfunction price(state, datapoint, key) {\n    if (state.laster) {\n        return '0.00$';\n    }\n    const value = state.data.grouped[datapoint][key].toFixed(2);\n    return `${value}$`;\n}\n\nfunction getTime(time, type) {\n    const date = new Date(parseInt(time + '000', 10));\n    return date.toLocaleString('nb');\n}\n\nconst storageVersion = 5;\nfunction lastFraLocalstorage() {\n    const data = JSON.parse(window.localStorage.getItem('cryptographics'));\n    if (data && data.version === storageVersion) {\n        return JSON.parse(LZString.decompress(data.content));\n    } else {\n        return {\n            type: '1W',\n            laster: true,\n            data: null\n        };\n    }\n}\n\nfunction lagreTilLocalstorage(state) {\n    const stateJSON = LZString.compress(JSON.stringify(state));\n    const content = JSON.stringify({ version: storageVersion, content: stateJSON });\n    window.localStorage.setItem('cryptographics', content);\n}\n\nclass Application extends Component {\n    state = lastFraLocalstorage();\n\n    hentData = () => {\n        settled(...Object.keys(holdings).map((currency) => fetchData(currency, this.state.type)))\n            .then((data) => {\n                const rejected = data\n                    .filter((currency) => currency.state === 'rejected')\n                    .map((currency) => currency.currency);\n\n                const fulfilled = data\n                    .filter((currency) => currency.state === 'fulfilled')\n                    .map((currency) => {\n                        return {\n                            currency: currency.currency,\n                            data: currency.result.Data.reduce((acc, { time, close }) => ({ ...acc, [time]: close }), {})\n                        };\n                    });\n\n                if (fulfilled.length > 0) {\n                    const timedGroup = Object.keys(fulfilled[0].data)\n                        .reduce((acc, time) => ({\n                            ...acc, [time]: {\n                                ...fulfilled.reduce((coinacc, ff) => ({\n                                    ...coinacc,\n                                    [ff.currency]: ff.data[time]\n                                }), {})\n                            }\n                        }), {});\n\n                    Object.values(timedGroup)\n                        .forEach((group) => {\n                            Object.keys(group)\n                                .forEach((c) => {\n                                    group[`${c}-USD`] = parseFloat((group[c] * holdings[c]).toFixed(2));\n                                });\n\n                            group.total = Object.keys(group)\n                                .filter((c) => c.endsWith('-USD'))\n                                .reduce((a, b) => a + group[b], 0);\n                        });\n\n                    this.setState({\n                        laster: false,\n                        data: {\n                            grouped: timedGroup,\n                            rejected,\n                            fulfilled\n                        }\n                    }, () => lagreTilLocalstorage(this.state));\n                } else {\n                    this.setState({\n                        laster: false\n                    }, () => lagreTilLocalstorage(this.state));\n                }\n            });\n    };\n\n    setType = (event) => {\n        this.setState({ type: event.target.value }, this.hentData);\n    }\n\n    componentDidMount() {\n        this.hentData();\n    }\n\n    render() {\n        const times = this.state.laster ? [0] : Object.keys(this.state.data.grouped)\n            .sort((a, b) => (b - a));\n        const latestdatapoint = times[0];\n        const secondtoLastdatapoint = times[1];\n        const firstdatapoint = times[times.length - 1];\n\n        const boxes = [\n            <Box key=\"total\" title={`Total - ${price(this.state, latestdatapoint, 'total')}`}>\n                <Chart state={this.state} currency=\"total\"/>\n            </Box>,\n            ...Object.keys(holdings)\n                .map((currency) => (\n                    <Box key={currency}\n                         title={`${coins[currency]} (${currency}) - ${price(this.state, latestdatapoint, `${currency}-USD`)}`}>\n                        <Chart state={this.state} currency={currency}/>\n                    </Box>\n                ))];\n\n        const startPrice = price(this.state, secondtoLastdatapoint, 'total');\n        const endPrice = price(this.state, latestdatapoint, 'total');\n        const firstPrice = price(this.state, firstdatapoint, 'total');\n\n        const isRising = parseFloat(startPrice) < parseFloat(endPrice);\n        const diff = `${(parseFloat(endPrice) - parseFloat(startPrice)).toFixed(2)}$`;\n        const isRisingFromStart = parseFloat(firstPrice) < parseFloat(endPrice);\n        const diffFromStart = `${(parseFloat(endPrice) - parseFloat(firstPrice)).toFixed(2)}$`;\n        return (\n            <div className=\"application\">\n                <Box key=\"holding\" title=\"Trend\" className=\"trendingbox\">\n                    <div>\n                        <p className=\"center pricedate\">{getTime(latestdatapoint, this.state.type)}</p>\n                        <h1 className=\"center price\">{endPrice}</h1>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                        <div>\n                            <div>\n                                <p className={isRising ? 'center trend-up' : 'center trend-down'}/>\n                            </div>\n                            <div>\n                                <h2 className=\"center price\">{diff}</h2>\n                            </div>\n                            <div>\n                                <p className=\"center pricedate\">{getTime(secondtoLastdatapoint, this.state.type)}</p>\n                                <h2 className=\"center price\">{startPrice}</h2>\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                <p className={isRisingFromStart ? 'center trend-up' : 'center trend-down'}/>\n                            </div>\n                            <div>\n                                <h2 className=\"center price\">{diffFromStart}</h2>\n                            </div>\n                            <div>\n                                <p className=\"center pricedate\">{getTime(firstdatapoint, this.state.type)}</p>\n                                <h2 className=\"center price\">{firstPrice}</h2>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"types\">\n                        <input type=\"radio\" name=\"type\" value=\"2H\" id=\"2H\" checked={this.state.type === '2H'}\n                               onChange={this.setType}/>\n                        <label htmlFor=\"2H\">2H</label>\n                        <input type=\"radio\" name=\"type\" value=\"1D\" id=\"1D\" checked={this.state.type === '1D'}\n                               onChange={this.setType}/>\n                        <label htmlFor=\"1D\">1D</label>\n                        <input type=\"radio\" name=\"type\" value=\"1W\" id=\"1W\" checked={this.state.type === '1W'}\n                               onChange={this.setType}/>\n                        <label htmlFor=\"1W\">1W</label>\n                        <input type=\"radio\" name=\"type\" value=\"1M\" id=\"1M\" checked={this.state.type === '1M'}\n                               onChange={this.setType}/>\n                        <label htmlFor=\"1M\">1M</label>\n                        <input type=\"radio\" name=\"type\" value=\"1Y\" id=\"1Y\" checked={this.state.type === '1Y'}\n                               onChange={this.setType}/>\n                        <label htmlFor=\"1Y\">1Y</label>\n                    </div>\n                </Box>\n                {boxes}\n            </div>\n        );\n    }\n}\n\nexport default Application;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Application is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Aux from './components/react-aux';\nimport Background from './background';\nimport Application from './application';\nimport registerServiceWorker from './registerServiceWorker';\n\nif (process.env.REACT_APP_WITH_MOCKS === 'true') {\n    require('./mocks/index');\n}\nwindow.localStorage.clear();\n\nfunction App() {\n    return (\n        <Aux>\n            <Background />\n            <Application />\n        </Aux>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}